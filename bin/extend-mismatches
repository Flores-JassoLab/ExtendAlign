#!/usr/bin/awk -f
# The output file is described at
@include "ea_format.awk"
#
# No extension is needed when
$alignment_length == $query_length {
#
# So we just complete the missing fields and print the line.
#
	$query_5_seq = $query_3_seq = $subj_5_seq = $subj_3_seq = NA
	print $0
}
# Extension needs to be performed in the alternative case
# but is different for each strandness.
#
# Query Sequences
# ===============
#
# As we have the complete query sequence, we can just get the missing substrings
#
function get_5_ext(seq) {
	_seq = substr(seq, 1, len_5_ext)
	return _seq ? _seq : NA
}
function get_3_ext(seq) {
	_seq = substr(seq, ($query_end + 1), len_3_ext)
	return _seq ? _seq : NA
}
#
# Subject sequences
# =================
#
BEGIN {
#
# Those are commands for interrogating the subject database
#
  cmd_plus = "seq-from-indexed-fasta $REFERENCE"
  cmd_minus = "seq-from-indexed-fasta $REFERENCE | dna-reverse-complement"
}
#
function get_complete_subj_seq() {
#
# We assume the majority of the sequences are plus
# even if not declared.
#
	if ($strand == "minus") {	
		_pos = $subj_name ":" ($subj_start - len_3_ext) "-" ($subj_end + len_5_ext)
		print _pos \
		| cmd_minus \
		| getline $complete_subj_seq
	} else {
		_pos = $subj_name ":" ($subj_start - len_5_ext) "-" ($subj_end + len_3_ext)
		print _pos \
		| cmd_plus \
		| getline $complete_subj_seq
	}
	print _pos > /dev/fd/2
	unset _pos
}
#
# MAIN
# ====
#
{
	len_5_ext = ($query_start - 1)
	len_3_ext = ($query_length - $query_end)

	$query_5_seq = get_5_ext($complete_query_seq)
	$query_3_seq = get_3_ext($complete_query_seq)

	$complete_subj_seq = get_complete_subj_seq()

	$subj_5_seq = get_5_ext($complete_subj_seq)
	$subj_3_seq = get_3_ext($complete_subj_seq)
}
