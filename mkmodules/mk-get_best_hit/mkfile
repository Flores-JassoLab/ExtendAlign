### mk-get_best_hit ###
# mkfile script with dependency rules for:
#	1. Extracting the best hit result for each query in a HSe-blastn output file.
#	2. First, the script will sort the HSe-blastn output by alignment length and number of mismatches.
#	3. Then, awk will print only the first time a query ID appears.
#	4. In the end, we will keep one line of HSe-blastn results per each queryID.
#
## For more information about mk dependency control, see https://9fans.github.io/plan9port/man/man1/mk.html
#
## Define shell command line which will be used to run scripts.
MKSHELL=/bin/bash

## Use sort to find the best hits by ordering HSe-blastn results by longest alignment (field 6 in the blastn results),
##	^^then by least number of mismatches (field 7 in the blastn results),
##	^^then by least number of gaps (field 8 in the blastn results),
## then run awk, to check query sequence ID column ($2), and only print lines when a query ID appears for the fist time (seen[ ]++).
%.blastnbesthit.tsv: %.blastn.tsv
	# Write the original header into the temporary target.
	head -n1 $prereq > $target.build
	# Run tail -n+2 to avoid sorting the header.
	# Sort numerically descending field 6 (alignment length),
	# then, numerically ascending field 7 (number of mismatches),
	# then, numerically ascending field 8 (number of gaps),
	# the sorted lines will pass to awk to print lines only the first time a query ID appears (seen[$2]++).
	# Finally, results are appended to the temporary target that contains the original header.
	tail -n+2 $prereq \
	| sort \
		-k 6,6nr \
		-k 7,7n \
		-k 8,8n \
	| awk ' !seen[$2]++ ' \
	>> $target.build \
	&& mv $target.build $target
